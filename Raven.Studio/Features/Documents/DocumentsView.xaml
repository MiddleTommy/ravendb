<Infrastructure:View x:Class="Raven.Studio.Features.Documents.DocumentsView"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
                     xmlns:Controls1="clr-namespace:Raven.Studio.Controls"
                     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                     xmlns:Behaviors="clr-namespace:Raven.Studio.Behaviors"
                     xmlns:Documents="clr-namespace:Raven.Studio.Features.Documents"
                     xmlns:Models="clr-namespace:Raven.Studio.Models"
                     xmlns:Infrastructure="clr-namespace:Raven.Studio.Infrastructure"
                     xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
                     xmlns:Converters="clr-namespace:Raven.Studio.Infrastructure.Converters"
                     xmlns:ContextMenu="clr-namespace:Raven.Studio.Infrastructure.ContextMenu"
                     xmlns:Delay="clr-namespace:Delay"
                     xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                     mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="400" 
                     d:DataContext="{d:DesignInstance Models:DocumentsModel}">

    <Grid>
        <Grid.Resources>
            <DataTemplate x:Key="DataTemplate_Document_CardView">
                <Documents:DocumentView DataContext="{Binding Item}" />
            </DataTemplate>

            <DataTemplate x:Key="DataTemplate_List_CardView">
                <ListBox x:Name="DocumentsList"
                         ItemsSource="{Binding DocumentsWeak}"
                         Style="{StaticResource StealthPagingDocumentList}"
                         Margin="0"
                         Padding="10,10,10,0"
                         ItemTemplate="{StaticResource DataTemplate_Document_CardView}">

                    <i:Interaction.Triggers>
                        <Behaviors:StudioKeyTrigger Key="Delete">
                            <i:InvokeCommandAction Command="{Binding DeleteSelectedDocuments}" />
                        </Behaviors:StudioKeyTrigger>
                    </i:Interaction.Triggers>

                    <i:Interaction.Behaviors>
                        <Behaviors:SelectItemOnRightClick />
                        <Infrastructure:ProvideVisibleItemRangeFromItemsControlBehavior/>
                        <Behaviors:BindSelectedItemsBehavior Target="{Binding ItemSelection}"/>
                    </i:Interaction.Behaviors>

                    <ContextMenu:ContextMenuService.ContextMenu>
                        <ContextMenu:ContextMenu x:Name="DocumentsContextMenu">
                            <ContextMenu:MenuItem Header="Copy Document Id(s) to Clipboard"
                                                  Command="{Binding CopyIdsToClipboard}"/>
                            <ContextMenu:MenuItem Header="Copy Document(s) to Clipboard"
                                                  Command="{Binding CopyDocumentTextToClipboard}">
                                <ContextMenu:MenuItem.Icon>
                                    <Image Source="{StaticResource Image_CopyToClipboard_Tiny}"/>
                                </ContextMenu:MenuItem.Icon>
                            </ContextMenu:MenuItem>
                            <ContextMenu:MenuItem Header="Delete"
                                                Command="{Binding DeleteSelectedDocuments}">
                                <ContextMenu:MenuItem.Icon>
                                    <Image Source="{StaticResource Image_Delete_Tiny}"/>
                                </ContextMenu:MenuItem.Icon>
                            </ContextMenu:MenuItem>
                        </ContextMenu:ContextMenu>
                    </ContextMenu:ContextMenuService.ContextMenu>

                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Controls1:VirtualizingWrapPanel ItemWidth="{Binding Source={StaticResource DocumentSize}, Path=Current.Width}"
                                                             ItemHeight="{Binding Source={StaticResource DocumentSize}, Path=Current.Height}"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
            </DataTemplate>

            <DataTemplate x:Key="DataTemplate_List_DetailsView">
                <sdk:DataGrid x:Name="DocumentsList"
                              ItemsSource="{Binding Documents}"
                              AutoGenerateColumns="False"
                              IsReadOnly="True"
                              ColumnWidth="170"
                              RowHeight="28" 
                              ClipboardCopyMode="IncludeHeader"
                              SelectionMode="Extended">
                    <sdk:DataGrid.Resources>
                        <!-- We embed the style in the DataGrid's own Resources dictionary because otherwise referencing it in BindColumnsToColumnSetBehavior
                        causes a memory leak-->
                        <Style x:Key="InvalidBindingColumnHeaderStyle" 
                               TargetType="sdk:DataGridColumnHeader" 
                               BasedOn="{StaticResource Style_DataGridColumnHeader_Default}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{StaticResource Image_Error_Tiny}" Stretch="None" Margin="2" 
                                                   ToolTipService.ToolTip="{Binding Binding, StringFormat='{}{0} is not a valid column binding'}"/>
                                            <TextBlock Text="{Binding Header}" Margin="2"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </sdk:DataGrid.Resources>
                    <i:Interaction.Triggers>
                        <Behaviors:StudioKeyTrigger Key="Delete">
                            <i:InvokeCommandAction Command="{Binding DeleteSelectedDocuments}" />
                        </Behaviors:StudioKeyTrigger>
                    </i:Interaction.Triggers>

                    <i:Interaction.Behaviors>
                        <Behaviors:SelectRowOnRightClickBehavior />
                        <Infrastructure:ProvideVisibleItemRangeFromDataGridBehavior/>
                        <Behaviors:BindSelectedItemsBehavior Target="{Binding ItemSelection}"/>
                        <Behaviors:BindColumnsToColumnSetBehavior Columns="{Binding Columns}">
                            <Behaviors:BindColumnsToColumnSetBehavior.ColumnGenerator>
                                <Documents:DocumentDetailsColumnGenerator
                                    InvalidBindingHeaderStyle="{StaticResource InvalidBindingColumnHeaderStyle}"/>
                            </Behaviors:BindColumnsToColumnSetBehavior.ColumnGenerator>
                        </Behaviors:BindColumnsToColumnSetBehavior>
                        <Behaviors:DataGridRowDoubleClickCommandBehavior Command="{Binding EditDocument}"/>
                        <Behaviors:ColumnHeaderContextMenu>
                            <Behaviors:ColumnHeaderContextMenu.ContextMenu>
                                <ContextMenu:ContextMenu>
                                    <ContextMenu:MenuItem Header="Choose Columns" Command="{Binding EditColumns}">
                                        <ContextMenu:MenuItem.Icon>
                                            <Image Source="{StaticResource Image_EditColumns_Tiny}"/>
                                        </ContextMenu:MenuItem.Icon>
                                    </ContextMenu:MenuItem>
                                </ContextMenu:ContextMenu>
                            </Behaviors:ColumnHeaderContextMenu.ContextMenu>
                        </Behaviors:ColumnHeaderContextMenu>
                        <Behaviors:BindColumnVisibility ColumnHeader="Id" 
                                                        Visibility="{Binding DocumentsHaveId, Converter={StaticResource BooleanToVisibility}}"/>
                    </i:Interaction.Behaviors>

                    <ContextMenu:ContextMenuService.ContextMenu>
                        <ContextMenu:ContextMenu x:Name="DocumentsContextMenu">
                            <ContextMenu:MenuItem Header="Copy Document Id(s) to Clipboard"
                                                  Command="{Binding CopyIdsToClipboard}"/>
                            <ContextMenu:MenuItem Header="Copy Document(s) to Clipboard"
                                                  Command="{Binding CopyDocumentTextToClipboard}">
                                <ContextMenu:MenuItem.Icon>
                                    <Image Source="{StaticResource Image_CopyToClipboard_Tiny}"/>
                                </ContextMenu:MenuItem.Icon>
                            </ContextMenu:MenuItem>
                            <ContextMenu:MenuItem Header="Delete"
                                                  Command="{Binding DeleteSelectedDocuments}">
                                <ContextMenu:MenuItem.Icon>
                                    <Image Source="{StaticResource Image_Delete_Tiny}"/>
                                </ContextMenu:MenuItem.Icon>
                            </ContextMenu:MenuItem>
                        </ContextMenu:ContextMenu>
                    </ContextMenu:ContextMenuService.ContextMenu>
                    <sdk:DataGrid.Columns>
                        <sdk:DataGridTemplateColumn  x:Name="VisibilityColumn" 
                                                     Header="Id" 
                                                     Width="100" 
                                                     CanUserReorder="False" 
                                                     CanUserResize="True" 
                                                     CanUserSort="False" 
                                                     ClipboardContentBinding="{Binding Item.Document.Key}">
                            <sdk:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <i:Interaction.Behaviors>
                                            <Behaviors:ShowQuickDocumentPopupBehavior DocumentId="{Binding Item.Document.Key}"/>
                                        </i:Interaction.Behaviors>
                                        <Rectangle Margin="0"
                                                   HorizontalAlignment="Left"
                                                   Fill="#06000000"
                                                   Width="8"
                                                   RadiusX="1"
                                                   RadiusY="1"/>

                                        <Rectangle HorizontalAlignment="Left"
                                                   Width="4"
                                                   Fill="{Binding Path=Item.Fill}"
                                                   Margin="2"
                                                   Height="22"          
                                                   RadiusX="1"
                                                   RadiusY="1">
                                        </Rectangle>

                                        <TextBlock Text="{Binding Item.Document.Key}" 
                                                   Behaviors:FadeTrimming.IsEnabled="True" 
                                                   Behaviors:FadeTrimming.ShowTextInToolTipWhenTrimmed="False"
                                                   VerticalAlignment="Center" 
                                                   Margin="10,0,0,0"/>
                                    </Grid>
                                </DataTemplate>
                            </sdk:DataGridTemplateColumn.CellTemplate>
                        </sdk:DataGridTemplateColumn>
                    </sdk:DataGrid.Columns>
                </sdk:DataGrid>
            </DataTemplate>

            <Converters:StringValueToObjectConverter x:Key="Converter_DisplayStyleToTemplate">
                <Converters:StringValueToObjectConverter.Conversions>
                    <Converters:StringValueConversion When="Card" Then="{StaticResource DataTemplate_List_CardView}"/>
                    <Converters:StringValueConversion When="Details" Then="{StaticResource DataTemplate_List_DetailsView}"/>
                    <Converters:StringValueConversion When="IdOnly" Then="{StaticResource DataTemplate_List_CardView}"/>
                </Converters:StringValueToObjectConverter.Conversions>
            </Converters:StringValueToObjectConverter>
            
            <Storyboard x:Name="ShowRefreshPanel">
                <DoubleAnimation Storyboard.TargetName="RefreshPanel" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25"/>
            </Storyboard>
            <Storyboard x:Name="HideRefreshPanel">
                <DoubleAnimation Storyboard.TargetName="RefreshPanel" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
            </Storyboard>
        </Grid.Resources>

        <toolkit:HeaderedContentControl Style="{StaticResource Style_HeaderedContentControl_Stretch}">
            <toolkit:HeaderedContentControl.Header>
                <Grid>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Visibility="{Binding MinimalHeader, Converter={StaticResource BooleanToOppositeVisibility}}">
                        <Image Style="{StaticResource Style_Image_DocumentsPageHeader}"/>
                        <TextBlock Style="{StaticResource Style_Text_Header}"
								   Text="{Binding Header}"
								   toolkit:DockPanel.Dock="Left"
								   VerticalAlignment="Center"
								   Margin="6" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Visibility="{Binding MinimalHeader, Converter={StaticResource BooleanToVisibility}}">
                        <TextBlock Style="{StaticResource Style_TextBlock_PagePartHeader}"
								   Text="{Binding Header}"
								   toolkit:DockPanel.Dock="Left"
								   VerticalAlignment="Center"
								   Margin="6" />
                    </StackPanel>

                    <Border x:Name="RefreshPanel"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"
                            Margin="10,0" 
                            Opacity="0"
                            Background="#FFC8CDEC" BorderBrush="#FFCCCFDC" CornerRadius="2" BorderThickness="1">
                        <i:Interaction.Triggers>
                            <Behaviors:StudioDataTrigger Binding="{Binding HasChanges}" Value="True" Comparison="Equal">
                                <ei:ControlStoryboardAction Storyboard="{StaticResource ShowRefreshPanel}" ControlStoryboardOption="Play"/>
                            </Behaviors:StudioDataTrigger>
                            <Behaviors:StudioDataTrigger Binding="{Binding HasChanges}" Value="False" Comparison="Equal">
                                <ei:ControlStoryboardAction Storyboard="{StaticResource HideRefreshPanel}" ControlStoryboardOption="Play"/>
                            </Behaviors:StudioDataTrigger>
                        </i:Interaction.Triggers>
                        <StackPanel Orientation="Horizontal" Margin="8,4" >
                            <TextBlock Text="Documents have changed" FontWeight="Bold" Margin="0,0,8,0"/>
                            <HyperlinkButton Content="Refresh" Command="{Binding RefreshView}" Foreground="White"/>
                        </StackPanel>
                    </Border>

                    <StackPanel Orientation="Horizontal"
								VerticalAlignment="Center"
								Margin="0,0,4,0"
                                HorizontalAlignment="Right">
                        <Button Style="{StaticResource Style_Button_MouseOverChrome}" ToolTipService.ToolTip="Export to CSV" Command="{Binding ExportDetails}"
                                Visibility="{Binding IsExportEnabled, Converter={StaticResource BooleanToVisibility}}" Margin="6,0">
                            <Image Source="{StaticResource Image_ExportDetails_Tiny}"
								   Stretch="None"/>
                        </Button>
                        <Controls1:ViewSizeControl ViewSize="{Binding Path=Current.IndicatorPosition, Source={StaticResource DocumentSize}, Mode=TwoWay}" />
                        <Delay:PopupButton  ToolTipService.ToolTip="Settings" 
                                PopupAlignment="Right">
                            <Delay:PopupButton.Content>
                                <Image Source="{StaticResource Image_Settings_Tiny}"
						   Stretch="None"
						   VerticalAlignment="Center" />
                            </Delay:PopupButton.Content>
                            <Delay:PopupButton.PopupContent>
                                <Border Background="#EFEFEF"
                        BorderThickness="1"
                        BorderBrush="Gray"
                        Margin="0,0,0,0">
                                    <Border.Effect>
                                        <DropShadowEffect Opacity="0.4" />
                                    </Border.Effect>
                                    <Grid Margin="8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <CheckBox IsChecked="{Binding AutoRefresh, Mode=TwoWay}" Content="Auto Refresh"/>

                                    </Grid>
                                </Border>
                            </Delay:PopupButton.PopupContent>
                        </Delay:PopupButton>
                    </StackPanel>
                </Grid>

            </toolkit:HeaderedContentControl.Header>

            <Grid>
                <ContentControl Content="{Binding }" 
                                ContentTemplate="{Binding Path=Current.DisplayStyle, Source={StaticResource DocumentSize}, Converter={StaticResource Converter_DisplayStyleToTemplate}}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch" Margin="0,0,0,4"/>
                <Controls1:BusynessIndicator BusyBody="{Binding Documents.Source}" VerticalAlignment="Bottom"/>
            </Grid>
        </toolkit:HeaderedContentControl>
    </Grid>
</Infrastructure:View>
